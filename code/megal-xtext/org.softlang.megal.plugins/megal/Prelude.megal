@Suppress 'entityNotConsidered'
model Prelude

//===============================================
// § Basic Entity Types
//===============================================

@Plugin 'PartOfReasonerPlugin'
Entity as entity

@Color '223,108,91'
Artifact < Entity

@Color '244,200,45'
Concept < Entity
Function < Entity

@Color '129,173,203'
Set < Entity

@Color '82,237,143'
Technology < Entity

@Color '73,158,216'
@Plugin 'LanguageResolverReasonerPlugin'
Language < Set

@Color '231,65,41'
@Plugin 'FileExtensionLanguageReasonerPlugin'
@Plugin 'FileFragmentRecoveryReasonerPlugin'
File < Artifact

@Plugin 'FolderReasonerPlugin'
Folder < Artifact

Fragment < Artifact

Resource < Artifact

Transient < Artifact

@Suppress 'notConsidered'
@Color '221,208,168'
Plugin < Entity

Pair < Entity

//===============================================
// § ElementOf
//===============================================

@Plugin 'ElementOfLanguageReasonerPlugin'
elementOf < Entity (+) * Set
@Plugin 'PairElementWhenComputedEvaluatorPlugin'
elementOf < Pair * Function
@Plugin 'FileElementOfLanguageEvaluatorPlugin'
elementOf < File (+) * Language

//===============================================
// § SubsetOf
//===============================================

subsetOf < Set * Set

//===============================================
// § PartOf
//===============================================

@Plugin 'FragmentOfReasonerPlugin'
partOf < Artifact(+) * Artifact(+)
partOf < Artifact(+) * Technology
partOf < Technology * Technology
partOf < Language * Technology
partOf < Language * Language
@Suppress 'notConsidered'
partOf < Plugin * Plugin

//===============================================
// § InstanceOf
//===============================================

instanceOf < Entity * Concept

//===============================================
// § isA
//===============================================

isA < Concept * Concept

//===============================================
// § ConformsTo
//===============================================

conformsTo < Artifact (+) * Artifact (+)

//===============================================
// § DependsOn
//===============================================

dependsOn < Artifact (+) * Artifact (+)
dependsOn < Technology * Language
dependsOn < Technology * Technology
dependsOn < Function * Technology

//===============================================
// § TransformableIn
//===============================================

transformableIn < Language * Language

//===============================================
// § TransformedIn
//===============================================

transformedIn < Language * Language
transformedIn < Artifact (+) * Artifact (+)

//===============================================
// § ConformsTo
//===============================================

correspondsTo < Artifact (+) * Artifact (+)

//===============================================
// § Defines
//===============================================

defines < Artifact (+) * Language
defines < Artifact (+) * Function

//===============================================
// § LinksTo
//===============================================

linksTo < File (+) * File (+)

//===============================================
// § RealisationOf
//===============================================

realizationOf < Artifact (+) * Function

@Suppress 'notConsidered'
realizationOf < Plugin * Entity

//===============================================
// § VariantOf
//===============================================

variantOf < Language * Language

//===============================================
// § VersionOf
//===============================================

versionOf < Language * Language

//===============================================
// § DeploysTo
//===============================================

deploysTo < Technology * Technology

//===============================================
// § FirstOf & SecondOf
//===============================================

firstOf < Entity (+) * Pair
secondOf < Entity (+) * Pair

//===============================================
// § RefersTo
//===============================================

refersTo < Artifact (+) * Technology
refersTo < Artifact (+) * Artifact (+)


//===============================================
// § Plugins
//===============================================

FileElementOfLanguageEvaluatorPlugin: Plugin
FileElementOfLanguageEvaluatorPlugin = 'classpath:org.softlang.megal.plugins.prelude.FileElementOfLanguageEvaluatorPlugin'

PairElementWhenComputedEvaluatorPlugin: Plugin
PairElementWhenComputedEvaluatorPlugin = 'classpath:org.softlang.megal.plugins.prelude.PairElementWhenComputedEvaluatorPlugin'

LanguageResolverReasonerPlugin: Plugin
LanguageResolverReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.LanguageResolverReasonerPlugin'

PartOfReasonerPlugin: Plugin
PartOfReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.PartOfReasonerPlugin'

FileFragmentRecoveryReasonerPlugin: Plugin
FileFragmentRecoveryReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.FileFragmentRecoveryReasonerPlugin'

FolderReasonerPlugin: Plugin
FolderReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.FolderReasonerPlugin'

FileExtensionLanguageReasonerPlugin: Plugin
FileExtensionLanguageReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.FileExtensionLanguageReasonerPlugin'

FragmentOfReasonerPlugin: Plugin
FragmentOfReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.FragmentOfReasonerPlugin'

ElementOfLanguageReasonerPlugin: Plugin
ElementOfLanguageReasonerPlugin = 'classpath:org.softlang.megal.plugins.prelude.ElementOfLanguageReasonerPlugin'
