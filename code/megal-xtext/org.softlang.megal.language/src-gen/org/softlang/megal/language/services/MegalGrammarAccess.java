/*
 * generated by Xtext
 */
package org.softlang.megal.language.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class MegalGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class MegalFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Keyword cModelKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cImportKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cImportsAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final CrossReference cImportsMegalFileCrossReference_3_0_1_0 = (CrossReference)cImportsAssignment_3_0_1.eContents().get(0);
		private final RuleCall cImportsMegalFileIDTerminalRuleCall_3_0_1_0_1 = (RuleCall)cImportsMegalFileCrossReference_3_0_1_0.eContents().get(1);
		private final Assignment cDeclarationsAssignment_3_1 = (Assignment)cAlternatives_3.eContents().get(1);
		private final RuleCall cDeclarationsMegalEntityTypeParserRuleCall_3_1_0 = (RuleCall)cDeclarationsAssignment_3_1.eContents().get(0);
		private final Assignment cDeclarationsAssignment_3_2 = (Assignment)cAlternatives_3.eContents().get(2);
		private final RuleCall cDeclarationsMegalRelationshipTypeParserRuleCall_3_2_0 = (RuleCall)cDeclarationsAssignment_3_2.eContents().get(0);
		private final Assignment cDeclarationsAssignment_3_3 = (Assignment)cAlternatives_3.eContents().get(3);
		private final RuleCall cDeclarationsMegalEntityParserRuleCall_3_3_0 = (RuleCall)cDeclarationsAssignment_3_3.eContents().get(0);
		private final Assignment cDeclarationsAssignment_3_4 = (Assignment)cAlternatives_3.eContents().get(4);
		private final RuleCall cDeclarationsMegalRelationshipParserRuleCall_3_4_0 = (RuleCall)cDeclarationsAssignment_3_4.eContents().get(0);
		private final Assignment cDeclarationsAssignment_3_5 = (Assignment)cAlternatives_3.eContents().get(5);
		private final RuleCall cDeclarationsMegalPairParserRuleCall_3_5_0 = (RuleCall)cDeclarationsAssignment_3_5.eContents().get(0);
		private final Assignment cBindingsAssignment_3_6 = (Assignment)cAlternatives_3.eContents().get(6);
		private final RuleCall cBindingsMegalLinkParserRuleCall_3_6_0 = (RuleCall)cBindingsAssignment_3_6.eContents().get(0);
		
		//MegalFile:
		//	annotations+=MegalAnnotation* 'model' name=ID ('import' imports+=[MegalFile] | declarations+=MegalEntityType
		//	| declarations+=MegalRelationshipType
		//	| declarations+=MegalEntity
		//	| declarations+=MegalRelationship
		//	| declarations+=MegalPair
		//	| bindings+=MegalLink)*;
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* 'model' name=ID ('import' imports+=[MegalFile] | declarations+=MegalEntityType |
		//declarations+=MegalRelationshipType | declarations+=MegalEntity | declarations+=MegalRelationship |
		//declarations+=MegalPair | bindings+=MegalLink)*
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//'model'
		public Keyword getModelKeyword_1() { return cModelKeyword_1; }

		//name=ID
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_2_0() { return cNameIDTerminalRuleCall_2_0; }

		//('import' imports+=[MegalFile] | declarations+=MegalEntityType | declarations+=MegalRelationshipType |
		//declarations+=MegalEntity | declarations+=MegalRelationship | declarations+=MegalPair | bindings+=MegalLink)*
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//'import' imports+=[MegalFile]
		public Group getGroup_3_0() { return cGroup_3_0; }

		//'import'
		public Keyword getImportKeyword_3_0_0() { return cImportKeyword_3_0_0; }

		//imports+=[MegalFile]
		public Assignment getImportsAssignment_3_0_1() { return cImportsAssignment_3_0_1; }

		//[MegalFile]
		public CrossReference getImportsMegalFileCrossReference_3_0_1_0() { return cImportsMegalFileCrossReference_3_0_1_0; }

		//ID
		public RuleCall getImportsMegalFileIDTerminalRuleCall_3_0_1_0_1() { return cImportsMegalFileIDTerminalRuleCall_3_0_1_0_1; }

		//declarations+=MegalEntityType
		public Assignment getDeclarationsAssignment_3_1() { return cDeclarationsAssignment_3_1; }

		//MegalEntityType
		public RuleCall getDeclarationsMegalEntityTypeParserRuleCall_3_1_0() { return cDeclarationsMegalEntityTypeParserRuleCall_3_1_0; }

		//declarations+=MegalRelationshipType
		public Assignment getDeclarationsAssignment_3_2() { return cDeclarationsAssignment_3_2; }

		//MegalRelationshipType
		public RuleCall getDeclarationsMegalRelationshipTypeParserRuleCall_3_2_0() { return cDeclarationsMegalRelationshipTypeParserRuleCall_3_2_0; }

		//declarations+=MegalEntity
		public Assignment getDeclarationsAssignment_3_3() { return cDeclarationsAssignment_3_3; }

		//MegalEntity
		public RuleCall getDeclarationsMegalEntityParserRuleCall_3_3_0() { return cDeclarationsMegalEntityParserRuleCall_3_3_0; }

		//declarations+=MegalRelationship
		public Assignment getDeclarationsAssignment_3_4() { return cDeclarationsAssignment_3_4; }

		//MegalRelationship
		public RuleCall getDeclarationsMegalRelationshipParserRuleCall_3_4_0() { return cDeclarationsMegalRelationshipParserRuleCall_3_4_0; }

		//declarations+=MegalPair
		public Assignment getDeclarationsAssignment_3_5() { return cDeclarationsAssignment_3_5; }

		//MegalPair
		public RuleCall getDeclarationsMegalPairParserRuleCall_3_5_0() { return cDeclarationsMegalPairParserRuleCall_3_5_0; }

		//bindings+=MegalLink
		public Assignment getBindingsAssignment_3_6() { return cBindingsAssignment_3_6; }

		//MegalLink
		public RuleCall getBindingsMegalLinkParserRuleCall_3_6_0() { return cBindingsMegalLinkParserRuleCall_3_6_0; }
	}

	public class MegalAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyANN_IDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Assignment cSelectionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSelectionSelectionParserRuleCall_1_0 = (RuleCall)cSelectionAssignment_1.eContents().get(0);
		
		//MegalAnnotation:
		//	key=ANN_ID selection=Selection?;
		@Override public ParserRule getRule() { return rule; }

		//key=ANN_ID selection=Selection?
		public Group getGroup() { return cGroup; }

		//key=ANN_ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//ANN_ID
		public RuleCall getKeyANN_IDTerminalRuleCall_0_0() { return cKeyANN_IDTerminalRuleCall_0_0; }

		//selection=Selection?
		public Assignment getSelectionAssignment_1() { return cSelectionAssignment_1; }

		//Selection
		public RuleCall getSelectionSelectionParserRuleCall_1_0() { return cSelectionSelectionParserRuleCall_1_0; }
	}

	public class MegalLinkElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalLink");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cLinkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cLinkMegalEntityCrossReference_1_0 = (CrossReference)cLinkAssignment_1.eContents().get(0);
		private final RuleCall cLinkMegalEntityIDTerminalRuleCall_1_0_1 = (RuleCall)cLinkMegalEntityCrossReference_1_0.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cLeftParenthesisKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cFirstAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cFirstMegalEntityCrossReference_2_1_0 = (CrossReference)cFirstAssignment_2_1.eContents().get(0);
		private final RuleCall cFirstMegalEntityIDTerminalRuleCall_2_1_0_1 = (RuleCall)cFirstMegalEntityCrossReference_2_1_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Keyword cVerticalLineHyphenMinusGreaterThanSignKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cSecondAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final CrossReference cSecondMegalEntityCrossReference_2_4_0 = (CrossReference)cSecondAssignment_2_4.eContents().get(0);
		private final RuleCall cSecondMegalEntityIDTerminalRuleCall_2_4_0_1 = (RuleCall)cSecondMegalEntityCrossReference_2_4_0.eContents().get(1);
		private final Keyword cEqualsSignKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cToAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cToSTRINGTerminalRuleCall_4_0 = (RuleCall)cToAssignment_4.eContents().get(0);
		
		//MegalLink:
		//	annotations+=MegalAnnotation* link=[MegalEntity] ('(' first=[MegalEntity] ')' '|->'
		//	second=[MegalEntity])? '=' to=STRING;
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* link=[MegalEntity] ('(' first=[MegalEntity] ')' '|->' second=[MegalEntity])? '=' to=STRING
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//link=[MegalEntity]
		public Assignment getLinkAssignment_1() { return cLinkAssignment_1; }

		//[MegalEntity]
		public CrossReference getLinkMegalEntityCrossReference_1_0() { return cLinkMegalEntityCrossReference_1_0; }

		//ID
		public RuleCall getLinkMegalEntityIDTerminalRuleCall_1_0_1() { return cLinkMegalEntityIDTerminalRuleCall_1_0_1; }

		//('(' first=[MegalEntity] ')' '|->' second=[MegalEntity])?
		public Group getGroup_2() { return cGroup_2; }

		//'('
		public Keyword getLeftParenthesisKeyword_2_0() { return cLeftParenthesisKeyword_2_0; }

		//first=[MegalEntity]
		public Assignment getFirstAssignment_2_1() { return cFirstAssignment_2_1; }

		//[MegalEntity]
		public CrossReference getFirstMegalEntityCrossReference_2_1_0() { return cFirstMegalEntityCrossReference_2_1_0; }

		//ID
		public RuleCall getFirstMegalEntityIDTerminalRuleCall_2_1_0_1() { return cFirstMegalEntityIDTerminalRuleCall_2_1_0_1; }

		//')'
		public Keyword getRightParenthesisKeyword_2_2() { return cRightParenthesisKeyword_2_2; }

		//'|->'
		public Keyword getVerticalLineHyphenMinusGreaterThanSignKeyword_2_3() { return cVerticalLineHyphenMinusGreaterThanSignKeyword_2_3; }

		//second=[MegalEntity]
		public Assignment getSecondAssignment_2_4() { return cSecondAssignment_2_4; }

		//[MegalEntity]
		public CrossReference getSecondMegalEntityCrossReference_2_4_0() { return cSecondMegalEntityCrossReference_2_4_0; }

		//ID
		public RuleCall getSecondMegalEntityIDTerminalRuleCall_2_4_0_1() { return cSecondMegalEntityIDTerminalRuleCall_2_4_0_1; }

		//'='
		public Keyword getEqualsSignKeyword_3() { return cEqualsSignKeyword_3; }

		//to=STRING
		public Assignment getToAssignment_4() { return cToAssignment_4; }

		//STRING
		public RuleCall getToSTRINGTerminalRuleCall_4_0() { return cToSTRINGTerminalRuleCall_4_0; }
	}

	public class MegalEntityTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalEntityType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cSupertypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final CrossReference cSupertypeMegalEntityTypeCrossReference_2_0_1_0 = (CrossReference)cSupertypeAssignment_2_0_1.eContents().get(0);
		private final RuleCall cSupertypeMegalEntityTypeIDTerminalRuleCall_2_0_1_0_1 = (RuleCall)cSupertypeMegalEntityTypeCrossReference_2_0_1_0.eContents().get(1);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cAsKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Keyword cEntityKeyword_2_1_1 = (Keyword)cGroup_2_1.eContents().get(1);
		
		//MegalEntityType:
		//	annotations+=MegalAnnotation* name=ID ('<' supertype=[MegalEntityType] | 'as' 'entity');
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* name=ID ('<' supertype=[MegalEntityType] | 'as' 'entity')
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//('<' supertype=[MegalEntityType] | 'as' 'entity')
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//'<' supertype=[MegalEntityType]
		public Group getGroup_2_0() { return cGroup_2_0; }

		//'<'
		public Keyword getLessThanSignKeyword_2_0_0() { return cLessThanSignKeyword_2_0_0; }

		//supertype=[MegalEntityType]
		public Assignment getSupertypeAssignment_2_0_1() { return cSupertypeAssignment_2_0_1; }

		//[MegalEntityType]
		public CrossReference getSupertypeMegalEntityTypeCrossReference_2_0_1_0() { return cSupertypeMegalEntityTypeCrossReference_2_0_1_0; }

		//ID
		public RuleCall getSupertypeMegalEntityTypeIDTerminalRuleCall_2_0_1_0_1() { return cSupertypeMegalEntityTypeIDTerminalRuleCall_2_0_1_0_1; }

		//'as' 'entity'
		public Group getGroup_2_1() { return cGroup_2_1; }

		//'as'
		public Keyword getAsKeyword_2_1_0() { return cAsKeyword_2_1_0; }

		//'entity'
		public Keyword getEntityKeyword_2_1_1() { return cEntityKeyword_2_1_1; }
	}

	public class MegalRelationshipTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalRelationshipType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLessThanSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLeftAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cLeftMegalEntityTypeCrossReference_3_0 = (CrossReference)cLeftAssignment_3.eContents().get(0);
		private final RuleCall cLeftMegalEntityTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cLeftMegalEntityTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cLeftParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cLeftParamsMegalEntityCrossReference_4_1_0 = (CrossReference)cLeftParamsAssignment_4_1.eContents().get(0);
		private final RuleCall cLeftParamsMegalEntityIDTerminalRuleCall_4_1_0_1 = (RuleCall)cLeftParamsMegalEntityCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cLeftParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cLeftParamsMegalEntityCrossReference_4_2_1_0 = (CrossReference)cLeftParamsAssignment_4_2_1.eContents().get(0);
		private final RuleCall cLeftParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cLeftParamsMegalEntityCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Alternatives cAlternatives_5 = (Alternatives)cGroup.eContents().get(5);
		private final Assignment cLeftBothAssignment_5_0 = (Assignment)cAlternatives_5.eContents().get(0);
		private final Keyword cLeftBothLeftParenthesisPlusSignRightParenthesisKeyword_5_0_0 = (Keyword)cLeftBothAssignment_5_0.eContents().get(0);
		private final Assignment cLeftManyAssignment_5_1 = (Assignment)cAlternatives_5.eContents().get(1);
		private final Keyword cLeftManyPlusSignKeyword_5_1_0 = (Keyword)cLeftManyAssignment_5_1.eContents().get(0);
		private final Keyword cAsteriskKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRightAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final CrossReference cRightMegalEntityTypeCrossReference_7_0 = (CrossReference)cRightAssignment_7.eContents().get(0);
		private final RuleCall cRightMegalEntityTypeIDTerminalRuleCall_7_0_1 = (RuleCall)cRightMegalEntityTypeCrossReference_7_0.eContents().get(1);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cLeftSquareBracketKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cRightParamsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final CrossReference cRightParamsMegalEntityCrossReference_8_1_0 = (CrossReference)cRightParamsAssignment_8_1.eContents().get(0);
		private final RuleCall cRightParamsMegalEntityIDTerminalRuleCall_8_1_0_1 = (RuleCall)cRightParamsMegalEntityCrossReference_8_1_0.eContents().get(1);
		private final Group cGroup_8_2 = (Group)cGroup_8.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_8_2_0 = (Keyword)cGroup_8_2.eContents().get(0);
		private final Assignment cRightParamsAssignment_8_2_1 = (Assignment)cGroup_8_2.eContents().get(1);
		private final CrossReference cRightParamsMegalEntityCrossReference_8_2_1_0 = (CrossReference)cRightParamsAssignment_8_2_1.eContents().get(0);
		private final RuleCall cRightParamsMegalEntityIDTerminalRuleCall_8_2_1_0_1 = (RuleCall)cRightParamsMegalEntityCrossReference_8_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_8_3 = (Keyword)cGroup_8.eContents().get(3);
		private final Alternatives cAlternatives_9 = (Alternatives)cGroup.eContents().get(9);
		private final Assignment cRightBothAssignment_9_0 = (Assignment)cAlternatives_9.eContents().get(0);
		private final Keyword cRightBothLeftParenthesisPlusSignRightParenthesisKeyword_9_0_0 = (Keyword)cRightBothAssignment_9_0.eContents().get(0);
		private final Assignment cRightManyAssignment_9_1 = (Assignment)cAlternatives_9.eContents().get(1);
		private final Keyword cRightManyPlusSignKeyword_9_1_0 = (Keyword)cRightManyAssignment_9_1.eContents().get(0);
		
		//MegalRelationshipType:
		//	annotations+=MegalAnnotation* name=ID '<'
		//	// Part of left type assignment
		//	left=[MegalEntityType] ('[' leftParams+=[MegalEntity] ('->' leftParams+=[MegalEntity])*
		//	']')? (leftBoth?='(+)' | leftMany?='+')?
		//	'*'
		//	// Part of right type assignment
		//	right=[MegalEntityType] ('[' rightParams+=[MegalEntity] ('->' rightParams+=[MegalEntity])*
		//	']')? (rightBoth?='(+)' | rightMany?='+')?;
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* name=ID '<' // Part of left type assignment
		//left=[MegalEntityType] ('[' leftParams+=[MegalEntity] ('->' leftParams+=[MegalEntity])* ']')? (leftBoth?='(+)' |
		//leftMany?='+')? '*' // Part of right type assignment
		//right=[MegalEntityType] ('[' rightParams+=[MegalEntity] ('->' rightParams+=[MegalEntity])* ']')? (rightBoth?='(+)' |
		//rightMany?='+')?
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//'<'
		public Keyword getLessThanSignKeyword_2() { return cLessThanSignKeyword_2; }

		//// Part of left type assignment
		//left=[MegalEntityType]
		public Assignment getLeftAssignment_3() { return cLeftAssignment_3; }

		//[MegalEntityType]
		public CrossReference getLeftMegalEntityTypeCrossReference_3_0() { return cLeftMegalEntityTypeCrossReference_3_0; }

		//ID
		public RuleCall getLeftMegalEntityTypeIDTerminalRuleCall_3_0_1() { return cLeftMegalEntityTypeIDTerminalRuleCall_3_0_1; }

		//('[' leftParams+=[MegalEntity] ('->' leftParams+=[MegalEntity])* ']')?
		public Group getGroup_4() { return cGroup_4; }

		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//leftParams+=[MegalEntity]
		public Assignment getLeftParamsAssignment_4_1() { return cLeftParamsAssignment_4_1; }

		//[MegalEntity]
		public CrossReference getLeftParamsMegalEntityCrossReference_4_1_0() { return cLeftParamsMegalEntityCrossReference_4_1_0; }

		//ID
		public RuleCall getLeftParamsMegalEntityIDTerminalRuleCall_4_1_0_1() { return cLeftParamsMegalEntityIDTerminalRuleCall_4_1_0_1; }

		//('->' leftParams+=[MegalEntity])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_2_0() { return cHyphenMinusGreaterThanSignKeyword_4_2_0; }

		//leftParams+=[MegalEntity]
		public Assignment getLeftParamsAssignment_4_2_1() { return cLeftParamsAssignment_4_2_1; }

		//[MegalEntity]
		public CrossReference getLeftParamsMegalEntityCrossReference_4_2_1_0() { return cLeftParamsMegalEntityCrossReference_4_2_1_0; }

		//ID
		public RuleCall getLeftParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1() { return cLeftParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1; }

		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }

		//(leftBoth?='(+)' | leftMany?='+')?
		public Alternatives getAlternatives_5() { return cAlternatives_5; }

		//leftBoth?='(+)'
		public Assignment getLeftBothAssignment_5_0() { return cLeftBothAssignment_5_0; }

		//'(+)'
		public Keyword getLeftBothLeftParenthesisPlusSignRightParenthesisKeyword_5_0_0() { return cLeftBothLeftParenthesisPlusSignRightParenthesisKeyword_5_0_0; }

		//leftMany?='+'
		public Assignment getLeftManyAssignment_5_1() { return cLeftManyAssignment_5_1; }

		//'+'
		public Keyword getLeftManyPlusSignKeyword_5_1_0() { return cLeftManyPlusSignKeyword_5_1_0; }

		//'*'
		public Keyword getAsteriskKeyword_6() { return cAsteriskKeyword_6; }

		//// Part of right type assignment
		//right=[MegalEntityType]
		public Assignment getRightAssignment_7() { return cRightAssignment_7; }

		//[MegalEntityType]
		public CrossReference getRightMegalEntityTypeCrossReference_7_0() { return cRightMegalEntityTypeCrossReference_7_0; }

		//ID
		public RuleCall getRightMegalEntityTypeIDTerminalRuleCall_7_0_1() { return cRightMegalEntityTypeIDTerminalRuleCall_7_0_1; }

		//('[' rightParams+=[MegalEntity] ('->' rightParams+=[MegalEntity])* ']')?
		public Group getGroup_8() { return cGroup_8; }

		//'['
		public Keyword getLeftSquareBracketKeyword_8_0() { return cLeftSquareBracketKeyword_8_0; }

		//rightParams+=[MegalEntity]
		public Assignment getRightParamsAssignment_8_1() { return cRightParamsAssignment_8_1; }

		//[MegalEntity]
		public CrossReference getRightParamsMegalEntityCrossReference_8_1_0() { return cRightParamsMegalEntityCrossReference_8_1_0; }

		//ID
		public RuleCall getRightParamsMegalEntityIDTerminalRuleCall_8_1_0_1() { return cRightParamsMegalEntityIDTerminalRuleCall_8_1_0_1; }

		//('->' rightParams+=[MegalEntity])*
		public Group getGroup_8_2() { return cGroup_8_2; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_8_2_0() { return cHyphenMinusGreaterThanSignKeyword_8_2_0; }

		//rightParams+=[MegalEntity]
		public Assignment getRightParamsAssignment_8_2_1() { return cRightParamsAssignment_8_2_1; }

		//[MegalEntity]
		public CrossReference getRightParamsMegalEntityCrossReference_8_2_1_0() { return cRightParamsMegalEntityCrossReference_8_2_1_0; }

		//ID
		public RuleCall getRightParamsMegalEntityIDTerminalRuleCall_8_2_1_0_1() { return cRightParamsMegalEntityIDTerminalRuleCall_8_2_1_0_1; }

		//']'
		public Keyword getRightSquareBracketKeyword_8_3() { return cRightSquareBracketKeyword_8_3; }

		//(rightBoth?='(+)' | rightMany?='+')?
		public Alternatives getAlternatives_9() { return cAlternatives_9; }

		//rightBoth?='(+)'
		public Assignment getRightBothAssignment_9_0() { return cRightBothAssignment_9_0; }

		//'(+)'
		public Keyword getRightBothLeftParenthesisPlusSignRightParenthesisKeyword_9_0_0() { return cRightBothLeftParenthesisPlusSignRightParenthesisKeyword_9_0_0; }

		//rightMany?='+'
		public Assignment getRightManyAssignment_9_1() { return cRightManyAssignment_9_1; }

		//'+'
		public Keyword getRightManyPlusSignKeyword_9_1_0() { return cRightManyPlusSignKeyword_9_1_0; }
	}

	public class MegalEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalEntity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cTypeMegalEntityTypeCrossReference_3_0 = (CrossReference)cTypeAssignment_3.eContents().get(0);
		private final RuleCall cTypeMegalEntityTypeIDTerminalRuleCall_3_0_1 = (RuleCall)cTypeMegalEntityTypeCrossReference_3_0.eContents().get(1);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cLeftSquareBracketKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParamsAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cParamsMegalEntityCrossReference_4_1_0 = (CrossReference)cParamsAssignment_4_1.eContents().get(0);
		private final RuleCall cParamsMegalEntityIDTerminalRuleCall_4_1_0_1 = (RuleCall)cParamsMegalEntityCrossReference_4_1_0.eContents().get(1);
		private final Group cGroup_4_2 = (Group)cGroup_4.eContents().get(2);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_4_2_0 = (Keyword)cGroup_4_2.eContents().get(0);
		private final Assignment cParamsAssignment_4_2_1 = (Assignment)cGroup_4_2.eContents().get(1);
		private final CrossReference cParamsMegalEntityCrossReference_4_2_1_0 = (CrossReference)cParamsAssignment_4_2_1.eContents().get(0);
		private final RuleCall cParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1 = (RuleCall)cParamsMegalEntityCrossReference_4_2_1_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cManyAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final Keyword cManyPlusSignKeyword_5_0 = (Keyword)cManyAssignment_5.eContents().get(0);
		
		//MegalEntity:
		//	annotations+=MegalAnnotation* name=ID ':'
		//	// Part of type assignment
		//	type=[MegalEntityType] ('[' params+=[MegalEntity] ('->' params+=[MegalEntity])*
		//	']')? many?='+'?;
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* name=ID ':' // Part of type assignment
		//type=[MegalEntityType] ('[' params+=[MegalEntity] ('->' params+=[MegalEntity])* ']')? many?='+'?
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//// Part of type assignment
		//type=[MegalEntityType]
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }

		//[MegalEntityType]
		public CrossReference getTypeMegalEntityTypeCrossReference_3_0() { return cTypeMegalEntityTypeCrossReference_3_0; }

		//ID
		public RuleCall getTypeMegalEntityTypeIDTerminalRuleCall_3_0_1() { return cTypeMegalEntityTypeIDTerminalRuleCall_3_0_1; }

		//('[' params+=[MegalEntity] ('->' params+=[MegalEntity])* ']')?
		public Group getGroup_4() { return cGroup_4; }

		//'['
		public Keyword getLeftSquareBracketKeyword_4_0() { return cLeftSquareBracketKeyword_4_0; }

		//params+=[MegalEntity]
		public Assignment getParamsAssignment_4_1() { return cParamsAssignment_4_1; }

		//[MegalEntity]
		public CrossReference getParamsMegalEntityCrossReference_4_1_0() { return cParamsMegalEntityCrossReference_4_1_0; }

		//ID
		public RuleCall getParamsMegalEntityIDTerminalRuleCall_4_1_0_1() { return cParamsMegalEntityIDTerminalRuleCall_4_1_0_1; }

		//('->' params+=[MegalEntity])*
		public Group getGroup_4_2() { return cGroup_4_2; }

		//'->'
		public Keyword getHyphenMinusGreaterThanSignKeyword_4_2_0() { return cHyphenMinusGreaterThanSignKeyword_4_2_0; }

		//params+=[MegalEntity]
		public Assignment getParamsAssignment_4_2_1() { return cParamsAssignment_4_2_1; }

		//[MegalEntity]
		public CrossReference getParamsMegalEntityCrossReference_4_2_1_0() { return cParamsMegalEntityCrossReference_4_2_1_0; }

		//ID
		public RuleCall getParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1() { return cParamsMegalEntityIDTerminalRuleCall_4_2_1_0_1; }

		//']'
		public Keyword getRightSquareBracketKeyword_4_3() { return cRightSquareBracketKeyword_4_3; }

		//many?='+'?
		public Assignment getManyAssignment_5() { return cManyAssignment_5; }

		//'+'
		public Keyword getManyPlusSignKeyword_5_0() { return cManyPlusSignKeyword_5_0; }
	}

	public class MegalRelationshipElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalRelationship");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cLeftAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cLeftMegalEntityCrossReference_1_0 = (CrossReference)cLeftAssignment_1.eContents().get(0);
		private final RuleCall cLeftMegalEntityIDTerminalRuleCall_1_0_1 = (RuleCall)cLeftMegalEntityCrossReference_1_0.eContents().get(1);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTypeMegalRelationshipTypeCrossReference_2_0 = (CrossReference)cTypeAssignment_2.eContents().get(0);
		private final RuleCall cTypeMegalRelationshipTypeIDTerminalRuleCall_2_0_1 = (RuleCall)cTypeMegalRelationshipTypeCrossReference_2_0.eContents().get(1);
		private final Assignment cRightAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cRightMegalEntityCrossReference_3_0 = (CrossReference)cRightAssignment_3.eContents().get(0);
		private final RuleCall cRightMegalEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cRightMegalEntityCrossReference_3_0.eContents().get(1);
		
		//MegalRelationship:
		//	annotations+=MegalAnnotation*
		//	left=[MegalEntity] type=[MegalRelationshipType] right=[MegalEntity];
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* left=[MegalEntity] type=[MegalRelationshipType] right=[MegalEntity]
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//left=[MegalEntity]
		public Assignment getLeftAssignment_1() { return cLeftAssignment_1; }

		//[MegalEntity]
		public CrossReference getLeftMegalEntityCrossReference_1_0() { return cLeftMegalEntityCrossReference_1_0; }

		//ID
		public RuleCall getLeftMegalEntityIDTerminalRuleCall_1_0_1() { return cLeftMegalEntityIDTerminalRuleCall_1_0_1; }

		//type=[MegalRelationshipType]
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }

		//[MegalRelationshipType]
		public CrossReference getTypeMegalRelationshipTypeCrossReference_2_0() { return cTypeMegalRelationshipTypeCrossReference_2_0; }

		//ID
		public RuleCall getTypeMegalRelationshipTypeIDTerminalRuleCall_2_0_1() { return cTypeMegalRelationshipTypeIDTerminalRuleCall_2_0_1; }

		//right=[MegalEntity]
		public Assignment getRightAssignment_3() { return cRightAssignment_3; }

		//[MegalEntity]
		public CrossReference getRightMegalEntityCrossReference_3_0() { return cRightMegalEntityCrossReference_3_0; }

		//ID
		public RuleCall getRightMegalEntityIDTerminalRuleCall_3_0_1() { return cRightMegalEntityIDTerminalRuleCall_3_0_1; }
	}

	public class MegalPairElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.MegalPair");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cAnnotationsAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cAnnotationsMegalAnnotationParserRuleCall_0_0 = (RuleCall)cAnnotationsAssignment_0.eContents().get(0);
		private final Assignment cSetAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cSetMegalEntityCrossReference_1_0 = (CrossReference)cSetAssignment_1.eContents().get(0);
		private final RuleCall cSetMegalEntityIDTerminalRuleCall_1_0_1 = (RuleCall)cSetMegalEntityCrossReference_1_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cFirstAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final CrossReference cFirstMegalEntityCrossReference_3_0 = (CrossReference)cFirstAssignment_3.eContents().get(0);
		private final RuleCall cFirstMegalEntityIDTerminalRuleCall_3_0_1 = (RuleCall)cFirstMegalEntityCrossReference_3_0.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Keyword cVerticalLineHyphenMinusGreaterThanSignKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cSecondAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final CrossReference cSecondMegalEntityCrossReference_6_0 = (CrossReference)cSecondAssignment_6.eContents().get(0);
		private final RuleCall cSecondMegalEntityIDTerminalRuleCall_6_0_1 = (RuleCall)cSecondMegalEntityCrossReference_6_0.eContents().get(1);
		
		//MegalPair:
		//	annotations+=MegalAnnotation* set=[MegalEntity]
		//	'(' first=[MegalEntity] ')' '|->' second=[MegalEntity];
		@Override public ParserRule getRule() { return rule; }

		//annotations+=MegalAnnotation* set=[MegalEntity] '(' first=[MegalEntity] ')' '|->' second=[MegalEntity]
		public Group getGroup() { return cGroup; }

		//annotations+=MegalAnnotation*
		public Assignment getAnnotationsAssignment_0() { return cAnnotationsAssignment_0; }

		//MegalAnnotation
		public RuleCall getAnnotationsMegalAnnotationParserRuleCall_0_0() { return cAnnotationsMegalAnnotationParserRuleCall_0_0; }

		//set=[MegalEntity]
		public Assignment getSetAssignment_1() { return cSetAssignment_1; }

		//[MegalEntity]
		public CrossReference getSetMegalEntityCrossReference_1_0() { return cSetMegalEntityCrossReference_1_0; }

		//ID
		public RuleCall getSetMegalEntityIDTerminalRuleCall_1_0_1() { return cSetMegalEntityIDTerminalRuleCall_1_0_1; }

		//'('
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//first=[MegalEntity]
		public Assignment getFirstAssignment_3() { return cFirstAssignment_3; }

		//[MegalEntity]
		public CrossReference getFirstMegalEntityCrossReference_3_0() { return cFirstMegalEntityCrossReference_3_0; }

		//ID
		public RuleCall getFirstMegalEntityIDTerminalRuleCall_3_0_1() { return cFirstMegalEntityIDTerminalRuleCall_3_0_1; }

		//')'
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//'|->'
		public Keyword getVerticalLineHyphenMinusGreaterThanSignKeyword_5() { return cVerticalLineHyphenMinusGreaterThanSignKeyword_5; }

		//second=[MegalEntity]
		public Assignment getSecondAssignment_6() { return cSecondAssignment_6; }

		//[MegalEntity]
		public CrossReference getSecondMegalEntityCrossReference_6_0() { return cSecondMegalEntityCrossReference_6_0; }

		//ID
		public RuleCall getSecondMegalEntityIDTerminalRuleCall_6_0_1() { return cSecondMegalEntityIDTerminalRuleCall_6_0_1; }
	}

	public class SelectionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.Selection");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSelectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSelectQueryDefEntryParserRuleCall_0_0 = (RuleCall)cSelectAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cSelectAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cSelectQueryDefEntryParserRuleCall_1_1_0 = (RuleCall)cSelectAssignment_1_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cQueryAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cQueryQueryStatementParserRuleCall_2_2_0 = (RuleCall)cQueryAssignment_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		
		//Selection:
		//	select+=QueryDefEntry (',' select+=QueryDefEntry)* ('from' '{' query+=QueryStatement+ '}')?;
		@Override public ParserRule getRule() { return rule; }

		//select+=QueryDefEntry (',' select+=QueryDefEntry)* ('from' '{' query+=QueryStatement+ '}')?
		public Group getGroup() { return cGroup; }

		//select+=QueryDefEntry
		public Assignment getSelectAssignment_0() { return cSelectAssignment_0; }

		//QueryDefEntry
		public RuleCall getSelectQueryDefEntryParserRuleCall_0_0() { return cSelectQueryDefEntryParserRuleCall_0_0; }

		//(',' select+=QueryDefEntry)*
		public Group getGroup_1() { return cGroup_1; }

		//','
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//select+=QueryDefEntry
		public Assignment getSelectAssignment_1_1() { return cSelectAssignment_1_1; }

		//QueryDefEntry
		public RuleCall getSelectQueryDefEntryParserRuleCall_1_1_0() { return cSelectQueryDefEntryParserRuleCall_1_1_0; }

		//('from' '{' query+=QueryStatement+ '}')?
		public Group getGroup_2() { return cGroup_2; }

		//'from'
		public Keyword getFromKeyword_2_0() { return cFromKeyword_2_0; }

		//'{'
		public Keyword getLeftCurlyBracketKeyword_2_1() { return cLeftCurlyBracketKeyword_2_1; }

		//query+=QueryStatement+
		public Assignment getQueryAssignment_2_2() { return cQueryAssignment_2_2; }

		//QueryStatement
		public RuleCall getQueryQueryStatementParserRuleCall_2_2_0() { return cQueryQueryStatementParserRuleCall_2_2_0; }

		//'}'
		public Keyword getRightCurlyBracketKeyword_2_3() { return cRightCurlyBracketKeyword_2_3; }
	}

	public class QueryStatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryStatement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSubjectAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cSubjectQueryRefEntryParserRuleCall_0_0 = (RuleCall)cSubjectAssignment_0.eContents().get(0);
		private final Assignment cPredicateAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final CrossReference cPredicateMegalRelationshipTypeCrossReference_1_0 = (CrossReference)cPredicateAssignment_1.eContents().get(0);
		private final RuleCall cPredicateMegalRelationshipTypeIDTerminalRuleCall_1_0_1 = (RuleCall)cPredicateMegalRelationshipTypeCrossReference_1_0.eContents().get(1);
		private final Assignment cObjectAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cObjectQueryRefEntryParserRuleCall_2_0 = (RuleCall)cObjectAssignment_2.eContents().get(0);
		
		//QueryStatement:
		//	subject=QueryRefEntry predicate=[MegalRelationshipType] object=QueryRefEntry;
		@Override public ParserRule getRule() { return rule; }

		//subject=QueryRefEntry predicate=[MegalRelationshipType] object=QueryRefEntry
		public Group getGroup() { return cGroup; }

		//subject=QueryRefEntry
		public Assignment getSubjectAssignment_0() { return cSubjectAssignment_0; }

		//QueryRefEntry
		public RuleCall getSubjectQueryRefEntryParserRuleCall_0_0() { return cSubjectQueryRefEntryParserRuleCall_0_0; }

		//predicate=[MegalRelationshipType]
		public Assignment getPredicateAssignment_1() { return cPredicateAssignment_1; }

		//[MegalRelationshipType]
		public CrossReference getPredicateMegalRelationshipTypeCrossReference_1_0() { return cPredicateMegalRelationshipTypeCrossReference_1_0; }

		//ID
		public RuleCall getPredicateMegalRelationshipTypeIDTerminalRuleCall_1_0_1() { return cPredicateMegalRelationshipTypeIDTerminalRuleCall_1_0_1; }

		//object=QueryRefEntry
		public Assignment getObjectAssignment_2() { return cObjectAssignment_2; }

		//QueryRefEntry
		public RuleCall getObjectQueryRefEntryParserRuleCall_2_0() { return cObjectQueryRefEntryParserRuleCall_2_0; }
	}

	public class QueryDefEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryDefEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQueryParamParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQueryStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cQueryEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQueryPosParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//QueryDefEntry QueryEntry:
		//	QueryParam | QueryString | QueryEntity | QueryPos
		@Override public ParserRule getRule() { return rule; }

		//QueryParam | QueryString | QueryEntity | QueryPos
		public Alternatives getAlternatives() { return cAlternatives; }

		//QueryParam
		public RuleCall getQueryParamParserRuleCall_0() { return cQueryParamParserRuleCall_0; }

		//QueryString
		public RuleCall getQueryStringParserRuleCall_1() { return cQueryStringParserRuleCall_1; }

		//QueryEntity
		public RuleCall getQueryEntityParserRuleCall_2() { return cQueryEntityParserRuleCall_2; }

		//QueryPos
		public RuleCall getQueryPosParserRuleCall_3() { return cQueryPosParserRuleCall_3; }
	}

	public class QueryRefEntryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryRefEntry");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cQueryReferenceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cQueryStringParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cQueryEntityParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cQueryPosParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//QueryRefEntry QueryEntry:
		//	QueryReference | QueryString | QueryEntity | QueryPos
		@Override public ParserRule getRule() { return rule; }

		//QueryReference | QueryString | QueryEntity | QueryPos
		public Alternatives getAlternatives() { return cAlternatives; }

		//QueryReference
		public RuleCall getQueryReferenceParserRuleCall_0() { return cQueryReferenceParserRuleCall_0; }

		//QueryString
		public RuleCall getQueryStringParserRuleCall_1() { return cQueryStringParserRuleCall_1; }

		//QueryEntity
		public RuleCall getQueryEntityParserRuleCall_2() { return cQueryEntityParserRuleCall_2; }

		//QueryPos
		public RuleCall getQueryPosParserRuleCall_3() { return cQueryPosParserRuleCall_3; }
	}

	public class QueryParamElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryParam");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameVAR_IDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final CrossReference cTypeMegalEntityTypeCrossReference_1_1_0 = (CrossReference)cTypeAssignment_1_1.eContents().get(0);
		private final RuleCall cTypeMegalEntityTypeIDTerminalRuleCall_1_1_0_1 = (RuleCall)cTypeMegalEntityTypeCrossReference_1_1_0.eContents().get(1);
		
		//QueryParam:
		//	name=VAR_ID (':' type=[MegalEntityType])?;
		@Override public ParserRule getRule() { return rule; }

		//name=VAR_ID (':' type=[MegalEntityType])?
		public Group getGroup() { return cGroup; }

		//name=VAR_ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//VAR_ID
		public RuleCall getNameVAR_IDTerminalRuleCall_0_0() { return cNameVAR_IDTerminalRuleCall_0_0; }

		//(':' type=[MegalEntityType])?
		public Group getGroup_1() { return cGroup_1; }

		//':'
		public Keyword getColonKeyword_1_0() { return cColonKeyword_1_0; }

		//type=[MegalEntityType]
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//[MegalEntityType]
		public CrossReference getTypeMegalEntityTypeCrossReference_1_1_0() { return cTypeMegalEntityTypeCrossReference_1_1_0; }

		//ID
		public RuleCall getTypeMegalEntityTypeIDTerminalRuleCall_1_1_0_1() { return cTypeMegalEntityTypeIDTerminalRuleCall_1_1_0_1; }
	}

	public class QueryReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryReference");
		private final Assignment cRefAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cRefQueryParamCrossReference_0 = (CrossReference)cRefAssignment.eContents().get(0);
		private final RuleCall cRefQueryParamVAR_IDTerminalRuleCall_0_1 = (RuleCall)cRefQueryParamCrossReference_0.eContents().get(1);
		
		//QueryReference:
		//	ref=[QueryParam|VAR_ID];
		@Override public ParserRule getRule() { return rule; }

		//ref=[QueryParam|VAR_ID]
		public Assignment getRefAssignment() { return cRefAssignment; }

		//[QueryParam|VAR_ID]
		public CrossReference getRefQueryParamCrossReference_0() { return cRefQueryParamCrossReference_0; }

		//VAR_ID
		public RuleCall getRefQueryParamVAR_IDTerminalRuleCall_0_1() { return cRefQueryParamVAR_IDTerminalRuleCall_0_1; }
	}

	public class QueryStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryString");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueSTRINGTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//QueryString:
		//	value=STRING;
		@Override public ParserRule getRule() { return rule; }

		//value=STRING
		public Assignment getValueAssignment() { return cValueAssignment; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_0() { return cValueSTRINGTerminalRuleCall_0; }
	}

	public class QueryEntityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryEntity");
		private final Assignment cEntityAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cEntityMegalEntityCrossReference_0 = (CrossReference)cEntityAssignment.eContents().get(0);
		private final RuleCall cEntityMegalEntityIDTerminalRuleCall_0_1 = (RuleCall)cEntityMegalEntityCrossReference_0.eContents().get(1);
		
		//QueryEntity:
		//	entity=[MegalEntity];
		@Override public ParserRule getRule() { return rule; }

		//entity=[MegalEntity]
		public Assignment getEntityAssignment() { return cEntityAssignment; }

		//[MegalEntity]
		public CrossReference getEntityMegalEntityCrossReference_0() { return cEntityMegalEntityCrossReference_0; }

		//ID
		public RuleCall getEntityMegalEntityIDTerminalRuleCall_0_1() { return cEntityMegalEntityIDTerminalRuleCall_0_1; }
	}

	public class QueryPosElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.QueryPos");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_1_0 = (RuleCall)cValueAssignment_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//QueryPos:
		//	'(' value=INT ')';
		@Override public ParserRule getRule() { return rule; }

		//'(' value=INT ')'
		public Group getGroup() { return cGroup; }

		//'('
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//value=INT
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_1_0() { return cValueINTTerminalRuleCall_1_0; }

		//')'
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}
	
	
	private final MegalFileElements pMegalFile;
	private final MegalAnnotationElements pMegalAnnotation;
	private final MegalLinkElements pMegalLink;
	private final MegalEntityTypeElements pMegalEntityType;
	private final MegalRelationshipTypeElements pMegalRelationshipType;
	private final MegalEntityElements pMegalEntity;
	private final MegalRelationshipElements pMegalRelationship;
	private final MegalPairElements pMegalPair;
	private final SelectionElements pSelection;
	private final QueryStatementElements pQueryStatement;
	private final QueryDefEntryElements pQueryDefEntry;
	private final QueryRefEntryElements pQueryRefEntry;
	private final QueryParamElements pQueryParam;
	private final QueryReferenceElements pQueryReference;
	private final QueryStringElements pQueryString;
	private final QueryEntityElements pQueryEntity;
	private final QueryPosElements pQueryPos;
	private final TerminalRule tINT;
	private final TerminalRule tANN_ID;
	private final TerminalRule tVAR_ID;
	private final TerminalRule tID;
	private final TerminalRule tSTRING;
	private final TerminalRule tCOMMENT;
	private final TerminalRule tWS;
	
	private final Grammar grammar;

	@Inject
	public MegalGrammarAccess(GrammarProvider grammarProvider) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.pMegalFile = new MegalFileElements();
		this.pMegalAnnotation = new MegalAnnotationElements();
		this.pMegalLink = new MegalLinkElements();
		this.pMegalEntityType = new MegalEntityTypeElements();
		this.pMegalRelationshipType = new MegalRelationshipTypeElements();
		this.pMegalEntity = new MegalEntityElements();
		this.pMegalRelationship = new MegalRelationshipElements();
		this.pMegalPair = new MegalPairElements();
		this.pSelection = new SelectionElements();
		this.pQueryStatement = new QueryStatementElements();
		this.pQueryDefEntry = new QueryDefEntryElements();
		this.pQueryRefEntry = new QueryRefEntryElements();
		this.pQueryParam = new QueryParamElements();
		this.pQueryReference = new QueryReferenceElements();
		this.pQueryString = new QueryStringElements();
		this.pQueryEntity = new QueryEntityElements();
		this.pQueryPos = new QueryPosElements();
		this.tINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.INT");
		this.tANN_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.ANN_ID");
		this.tVAR_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.VAR_ID");
		this.tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.ID");
		this.tSTRING = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.STRING");
		this.tCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.COMMENT");
		this.tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "org.softlang.megal.language.Megal.WS");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.softlang.megal.language.Megal".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	

	
	//MegalFile:
	//	annotations+=MegalAnnotation* 'model' name=ID ('import' imports+=[MegalFile] | declarations+=MegalEntityType
	//	| declarations+=MegalRelationshipType
	//	| declarations+=MegalEntity
	//	| declarations+=MegalRelationship
	//	| declarations+=MegalPair
	//	| bindings+=MegalLink)*;
	public MegalFileElements getMegalFileAccess() {
		return pMegalFile;
	}
	
	public ParserRule getMegalFileRule() {
		return getMegalFileAccess().getRule();
	}

	//MegalAnnotation:
	//	key=ANN_ID selection=Selection?;
	public MegalAnnotationElements getMegalAnnotationAccess() {
		return pMegalAnnotation;
	}
	
	public ParserRule getMegalAnnotationRule() {
		return getMegalAnnotationAccess().getRule();
	}

	//MegalLink:
	//	annotations+=MegalAnnotation* link=[MegalEntity] ('(' first=[MegalEntity] ')' '|->'
	//	second=[MegalEntity])? '=' to=STRING;
	public MegalLinkElements getMegalLinkAccess() {
		return pMegalLink;
	}
	
	public ParserRule getMegalLinkRule() {
		return getMegalLinkAccess().getRule();
	}

	//MegalEntityType:
	//	annotations+=MegalAnnotation* name=ID ('<' supertype=[MegalEntityType] | 'as' 'entity');
	public MegalEntityTypeElements getMegalEntityTypeAccess() {
		return pMegalEntityType;
	}
	
	public ParserRule getMegalEntityTypeRule() {
		return getMegalEntityTypeAccess().getRule();
	}

	//MegalRelationshipType:
	//	annotations+=MegalAnnotation* name=ID '<'
	//	// Part of left type assignment
	//	left=[MegalEntityType] ('[' leftParams+=[MegalEntity] ('->' leftParams+=[MegalEntity])*
	//	']')? (leftBoth?='(+)' | leftMany?='+')?
	//	'*'
	//	// Part of right type assignment
	//	right=[MegalEntityType] ('[' rightParams+=[MegalEntity] ('->' rightParams+=[MegalEntity])*
	//	']')? (rightBoth?='(+)' | rightMany?='+')?;
	public MegalRelationshipTypeElements getMegalRelationshipTypeAccess() {
		return pMegalRelationshipType;
	}
	
	public ParserRule getMegalRelationshipTypeRule() {
		return getMegalRelationshipTypeAccess().getRule();
	}

	//MegalEntity:
	//	annotations+=MegalAnnotation* name=ID ':'
	//	// Part of type assignment
	//	type=[MegalEntityType] ('[' params+=[MegalEntity] ('->' params+=[MegalEntity])*
	//	']')? many?='+'?;
	public MegalEntityElements getMegalEntityAccess() {
		return pMegalEntity;
	}
	
	public ParserRule getMegalEntityRule() {
		return getMegalEntityAccess().getRule();
	}

	//MegalRelationship:
	//	annotations+=MegalAnnotation*
	//	left=[MegalEntity] type=[MegalRelationshipType] right=[MegalEntity];
	public MegalRelationshipElements getMegalRelationshipAccess() {
		return pMegalRelationship;
	}
	
	public ParserRule getMegalRelationshipRule() {
		return getMegalRelationshipAccess().getRule();
	}

	//MegalPair:
	//	annotations+=MegalAnnotation* set=[MegalEntity]
	//	'(' first=[MegalEntity] ')' '|->' second=[MegalEntity];
	public MegalPairElements getMegalPairAccess() {
		return pMegalPair;
	}
	
	public ParserRule getMegalPairRule() {
		return getMegalPairAccess().getRule();
	}

	//Selection:
	//	select+=QueryDefEntry (',' select+=QueryDefEntry)* ('from' '{' query+=QueryStatement+ '}')?;
	public SelectionElements getSelectionAccess() {
		return pSelection;
	}
	
	public ParserRule getSelectionRule() {
		return getSelectionAccess().getRule();
	}

	//QueryStatement:
	//	subject=QueryRefEntry predicate=[MegalRelationshipType] object=QueryRefEntry;
	public QueryStatementElements getQueryStatementAccess() {
		return pQueryStatement;
	}
	
	public ParserRule getQueryStatementRule() {
		return getQueryStatementAccess().getRule();
	}

	//QueryDefEntry QueryEntry:
	//	QueryParam | QueryString | QueryEntity | QueryPos
	public QueryDefEntryElements getQueryDefEntryAccess() {
		return pQueryDefEntry;
	}
	
	public ParserRule getQueryDefEntryRule() {
		return getQueryDefEntryAccess().getRule();
	}

	//QueryRefEntry QueryEntry:
	//	QueryReference | QueryString | QueryEntity | QueryPos
	public QueryRefEntryElements getQueryRefEntryAccess() {
		return pQueryRefEntry;
	}
	
	public ParserRule getQueryRefEntryRule() {
		return getQueryRefEntryAccess().getRule();
	}

	//QueryParam:
	//	name=VAR_ID (':' type=[MegalEntityType])?;
	public QueryParamElements getQueryParamAccess() {
		return pQueryParam;
	}
	
	public ParserRule getQueryParamRule() {
		return getQueryParamAccess().getRule();
	}

	//QueryReference:
	//	ref=[QueryParam|VAR_ID];
	public QueryReferenceElements getQueryReferenceAccess() {
		return pQueryReference;
	}
	
	public ParserRule getQueryReferenceRule() {
		return getQueryReferenceAccess().getRule();
	}

	//QueryString:
	//	value=STRING;
	public QueryStringElements getQueryStringAccess() {
		return pQueryString;
	}
	
	public ParserRule getQueryStringRule() {
		return getQueryStringAccess().getRule();
	}

	//QueryEntity:
	//	entity=[MegalEntity];
	public QueryEntityElements getQueryEntityAccess() {
		return pQueryEntity;
	}
	
	public ParserRule getQueryEntityRule() {
		return getQueryEntityAccess().getRule();
	}

	//QueryPos:
	//	'(' value=INT ')';
	public QueryPosElements getQueryPosAccess() {
		return pQueryPos;
	}
	
	public ParserRule getQueryPosRule() {
		return getQueryPosAccess().getRule();
	}

	//terminal INT returns ecore::EInt:
	//	'1'..'9' '0'..'9'*;
	public TerminalRule getINTRule() {
		return tINT;
	} 

	//terminal ANN_ID:
	//	'@' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+ ('.' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+)*;
	public TerminalRule getANN_IDRule() {
		return tANN_ID;
	} 

	//terminal VAR_ID:
	//	'?' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+ ('.' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+)*;
	public TerminalRule getVAR_IDRule() {
		return tVAR_ID;
	} 

	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+ ('.' ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')+)*;
	public TerminalRule getIDRule() {
		return tID;
	} 

	//terminal STRING:
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return tSTRING;
	} 

	//terminal COMMENT:
	//	'/ *'->'* /' | '//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getCOMMENTRule() {
		return tCOMMENT;
	} 

	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return tWS;
	} 
}
